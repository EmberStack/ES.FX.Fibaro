namespace ES.FX.Fibaro.Devices.Models
{
    public interface IDevicePropertiesModel
    {
        long? UiMessageSendTime { get; set; }
        long? AutoConfig { get; set; }
        bool? Configured { get; set; }
        string Date { get; set; }
        bool? Dead { get; set; }
        long? DeviceControlType { get; set; }
        long DeviceIcon { get; set; }
        long? Disabled { get; set; }
        long? EmailNotificationId { get; set; }
        long? EmailNotificationType { get; set; }
        long? EndPoint { get; set; }
        long? EndPointId { get; set; }
        string Log { get; set; }
        string LogTemp { get; set; }
        string Manufacturer { get; set; }
        bool? MarkAsDead { get; set; }
        string Model { get; set; }
        long? NodeId { get; set; }
        long? PropertiesNodeId { get; set; }
        IParameterModel[] Parameters { get; set; }
        string ParametersTemplate { get; set; }
        bool? PollingDeadDevice { get; set; }
        long? PollingTime { get; set; }
        long? PollingTimeNext { get; set; }
        long? PollingTimeSec { get; set; }
        string ProductInfo { get; set; }
        long? PushNotificationId { get; set; }
        long? PushNotificationType { get; set; }
        long? RemoteGatewayId { get; set; }
        long? RequestNodeNeighborStat { get; set; }
        string RequestNodeNeighborStatTimeStemp { get; set; }
        string RequestNodeNeighborState { get; set; }
        string RequestNodeNeighborStateTimeStemp { get; set; }
        bool SaveLogs { get; set; }
        string SerialNumber { get; set; }
        long? ShowChildren { get; set; }
        long? SmsNotificationId { get; set; }
        long? SmsNotificationType { get; set; }
        string Status { get; set; }
        string SunriseHour { get; set; }
        string SunsetHour { get; set; }
        bool? UseTemplate { get; set; }
        string UserDescription { get; set; }
        object Value { get; set; }
        string ZwaveBuildVersion { get; set; }
        string ZwaveCompany { get; set; }
        string ZwaveInfo { get; set; }
        string ZwaveRegion { get; set; }
        string ZwaveVersion { get; set; }
        string Email { get; set; }
        long? HotelModeRoom { get; set; }
        long? LastPwdChange { get; set; }
        double? Latitude { get; set; }
        string Location { get; set; }
        string LocationTime { get; set; }
        long? LocationTimestamp { get; set; }
        double? Longitude { get; set; }
        double? PreviousLatitude { get; set; }
        string PreviousLocation { get; set; }
        string PreviousLocationTime { get; set; }
        long? PreviousLocationTimestamp { get; set; }
        double? PreviousLongitude { get; set; }
        bool? SendNotifications { get; set; }
        long? TrackUser { get; set; }
        string UserType { get; set; }
        bool? AtHome { get; set; }
        string FidUuid { get; set; }
        long? FirmwareUpdateLevel { get; set; }
        bool? InitialWizard { get; set; }
        string SipDisplayName { get; set; }
        string SipUserId { get; set; }
        string SipUserPassword { get; set; }
        bool? UseOptionalArmPin { get; set; }
        bool? UsePin { get; set; }
        long? ConditionCode { get; set; }
        long? ConditionCodeConverted { get; set; }
        double? Humidity { get; set; }
        double? Pressure { get; set; }
        double? Temperature { get; set; }
        string WeatherCondition { get; set; }
        double? Wind { get; set; }
        string[] Categories { get; set; }
        string DeadReason { get; set; }
        bool? Hidden { get; set; }
        string UiCurrentWeatherLabelCaption { get; set; }
        string UiConfigHiddenCaption { get; set; }
        bool? UiConfigHiddenEnabled { get; set; }
        string UiConfigSection1Caption { get; set; }
        bool? UiConfigSection1Enabled { get; set; }
        long? BatteryLevel { get; set; }
        bool? BatteryLowNotification { get; set; }
        long? DefInterval { get; set; }
        string DeviceSpecificData { get; set; }
        string DeviceSpecificIdType { get; set; }
        string DeviceState { get; set; }
        long[] LastWorkingRoute { get; set; }
        string LastWorkingRouteRequestStatus { get; set; }
        long? LastWorkingRouteRequestTimestamp { get; set; }
        long? LastWorkingRouteResponseTimestamp { get; set; }
        long? MaxInterval { get; set; }
        long? MinInterval { get; set; }
        long[] NeighborList { get; set; }
        string NeighborListRequestStatus { get; set; }
        long? NeighborListRequestTimestamp { get; set; }
        long? NeighborListResponseTimestamp { get; set; }
        long? StepInterval { get; set; }
        long? WakeUpTime { get; set; }
        object ZwaveSoftwareVersion { get; set; }
        long? AlarmDelay { get; set; }
        bool? AlarmExclude { get; set; }
        long? AlarmLevel { get; set; }
        long? AlarmTimeTimestamp { get; set; }
        long? AlarmType { get; set; }
        long? ArmConfig { get; set; }
        long? ArmDelay { get; set; }
        long? ArmTimeTimestamp { get; set; }
        bool? Armed { get; set; }
        bool? FibaroAlarm { get; set; }
        IFirmwareUpdateModel FirmwareUpdate { get; set; }
        long? LastBreached { get; set; }
        bool? Tamper { get; set; }
        string TamperMode { get; set; }
        string[] TamperOperatingModes { get; set; }
        string UpdateVersion { get; set; }
        long? Offset { get; set; }
        bool? ShowFireAlarm { get; set; }
        bool? ShowFreezeAlarm { get; set; }
        string Unit { get; set; }
        object[] DeviceGroup { get; set; }
        long? DeviceGroupMaster { get; set; }
        bool? IsLight { get; set; }
        double? Power { get; set; }
        long? PowerConsumption { get; set; }
        bool? ShowEnergy { get; set; }
        long? PollingInterval { get; set; }
        string Color { get; set; }
        double? Energy { get; set; }
        IIconModel Icon { get; set; }
        long? RfProtectionState { get; set; }
        long? RfProtectionSupport { get; set; }
        long? LocalProtectionState { get; set; }
        long? LocalProtectionSupport { get; set; }
        long? ProtectionExclusiveControl { get; set; }
        bool? ProtectionExclusiveControlSupport { get; set; }
        long? ProtectionState { get; set; }
        long? ProtectionTimeout { get; set; }
        bool? ProtectionTimeoutSupport { get; set; }
        ICentralSceneSupportModel[] CentralSceneSupport { get; set; }
        string DeviceToken { get; set; }
        string DeviceUid { get; set; }
        bool? Push { get; set; }
        long? LastLoggedUser { get; set; }
        string Ip { get; set; }
        long? Port { get; set; }
        long? CurrentIcon { get; set; }
        string MainLoop { get; set; }
        string UiTempValue { get; set; }
        bool? Visible { get; set; }
        IRowModel[] Rows { get; set; }
        long? DefaultPartyTime { get; set; }
        long? HeatingZoneId { get; set; }
        long? Mode { get; set; }
        long? NextTargetLevel { get; set; }
        long? NextTargetLevelTimestamp { get; set; }
        string SupportedModes { get; set; }
        long? TargetLevel { get; set; }
        long? TargetLevelTimestamp { get; set; }
        string ThermostatState { get; set; }
        long? Timestamp { get; set; }
        long? State { get; set; }
        string SwitchAllMode { get; set; }
    }
}